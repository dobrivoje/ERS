/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package radionica.UI;

import INFSYS.Adapt.Kategorije;
import INFSYS.Queries.INFSistemQuery;
import JFXChartGenerators.CssStyles.CSSStyles;
import JFXChartGenerators.StackedBars.AbstractCategory_StackedBarGenerator;
import JFXChartGenerators.StackedBars.StackedBarCategoryX_Generator;
import com.dobrivoje.utilities.warnings.Display;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import org.dobrivoje.calendarutilities.SrpskiKalendar;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//radionica.UI//DinamikaServSavetnici//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "DinamikaServSavetniciTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false, position = 1200)
@ActionID(category = "Window/Servis", id = "radionica.UI.DinamikaServSavetniciTopComponent")
@ActionReference(path = "Menu/Window/Servis", position = 1200)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DinamikaServSavetniciAction",
        preferredID = "DinamikaServSavetniciTopComponent"
)
@Messages({
    "CTL_DinamikaServSavetniciAction=Učešće Servisnih Savetnika",
    "CTL_DinamikaServSavetniciTopComponent=Učešće Servisnih Savetnika",
    "HINT_DinamikaServSavetniciTopComponent=Učešće Servisnih Savetnika"
})
public final class DinamikaServSavetniciTopComponent extends TopComponent {

    private Lookup.Result<String> kalendarLookup;
    private LookupListener llKalendar;

    private final Calendar calendar = Calendar.getInstance();
    private int god, mesec;
    private int prethGod, prethMesec;
    private boolean godIzmenjen, mesecIzmenjen;

    private final AbstractCategory_StackedBarGenerator bCSSavetnici1 = new StackedBarCategoryX_Generator();
    private final AbstractCategory_StackedBarGenerator bCSSavetnici2 = new StackedBarCategoryX_Generator();

    //<editor-fold defaultstate="collapsed" desc="Kalendar Bind">
    private String kalendarDatum_bind;

    public String getKalendarDatum() {
        return kalendarDatum_bind;
    }

    public void setKalendarDatum(String kalendar) {
        this.kalendarDatum_bind = kalendar;

        try {
            calendar.setTime(
                    kalendar == null
                    ? new Date() : new SimpleDateFormat("yyyy-MM-dd").parse(kalendar));

            if (calendar.get(Calendar.YEAR) != god) {
                godIzmenjen = true;
                god = calendar.get(Calendar.YEAR);
            } else {
                godIzmenjen = false;
            }

            if (1 + calendar.get(Calendar.MONTH) != mesec) {
                mesecIzmenjen = true;
                mesec = 1 + calendar.get(Calendar.MONTH);
            } else {
                mesecIzmenjen = false;
            }

            prethGod = (mesec == 1 ? god - 1 : god);
            prethMesec = (mesec == 1 ? 12 : mesec - 1);

        } catch (ParseException ex) {
        }
    }
    //</editor-fold>

    public DinamikaServSavetniciTopComponent() {
        initComponents();
        setName(Bundle.CTL_DinamikaServSavetniciTopComponent());
        setToolTipText(Bundle.HINT_DinamikaServSavetniciTopComponent());

        // Print funkcionalnost
        // putClientProperty("print.printable", Boolean.TRUE);
        // Nećemo, zaato što baš i nema smisla štampati :)
        setKalendarDatum(null);

        bCSSavetnici1.setUpChartPanel(jPanel_Kompanija_UP);
        bCSSavetnici1.setCSSStyle(CSSStyles.Style.RED_BAR);
        bCSSavetnici2.setUpChartPanel(jPanel_Kompanija_DOWN);
        bCSSavetnici2.setCSSStyle(CSSStyles.Style.RED_BAR);

        setFX_FA_Mesec_SSavetnici_Performanse(god, mesec, bCSSavetnici1);
        setFX_FA_Mesec_SSavetnici_Performanse(prethGod, prethMesec, bCSSavetnici2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Kompanija_UP = new javax.swing.JPanel();
        jPanel_Kompanija_DOWN = new javax.swing.JPanel();

        jPanel_Kompanija_UP.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_Kompanija_UP.setLayout(new java.awt.BorderLayout());

        jPanel_Kompanija_DOWN.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_Kompanija_DOWN.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Kompanija_UP, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
            .addComponent(jPanel_Kompanija_DOWN, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_Kompanija_UP, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(jPanel_Kompanija_DOWN, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel_Kompanija_DOWN;
    private javax.swing.JPanel jPanel_Kompanija_UP;
    // End of variables declaration//GEN-END:variables

    //<editor-fold defaultstate="collapsed" desc="UI Lookup">
    @Override
    public void componentOpened() {
        kalendarLookup = WindowManager
                .getDefault()
                .findTopComponent("PretrazivacTopComponent")
                .getLookup().lookupResult(String.class);

        llKalendar = new LookupListener() {
            @Override
            public void resultChanged(LookupEvent le) {
                Lookup.Result lr = (Lookup.Result) le.getSource();
                Collection<String> datumi = lr.allInstances();

                if (!datumi.isEmpty()) {
                    for (String d1 : datumi) {
                        setKalendarDatum(d1);

                        setFX_FA_Mesec_SSavetnici_Performanse(god, mesec, bCSSavetnici2);
                    }
                }
            }
        };
        kalendarLookup.addLookupListener(llKalendar);
    }

    @Override
    public void componentClosed() {
        kalendarLookup.removeLookupListener(llKalendar);
        kalendarLookup = null;
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="...">
    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    //</editor-fold>

    private void setFX_FA_Mesec_SSavetnici_Performanse(int Godina, int Mesec, AbstractCategory_StackedBarGenerator asbg) {
        if (godIzmenjen || mesecIzmenjen) {
            try {
                asbg.setUpSeries(INFSistemQuery.Mesec_Svi_SSavetnici_Performanse_Serije_Cat(Godina, Mesec, Kategorije.ServisniSavetnik.IME_I_PREZIME));

                asbg.setChartTitle("Učešće Servisnih Savetnika," + SrpskiKalendar.getMesecNazivLatinica(Mesec) + " " + String.valueOf(Godina));
                asbg.setSeriesTitles("Radovi", "Materijal");
                asbg.createFXObject();

            } catch (NullPointerException ex) {
                Display.obavestenjeBaloncic("Greška.", ex.getLocalizedMessage(), Display.TIP_OBAVESTENJA.GRESKA);
            } catch (Exception e) {
                Display.obavestenjeBaloncic("Greška.", e.toString(), Display.TIP_OBAVESTENJA.GRESKA);
            }
        }
    }
}
